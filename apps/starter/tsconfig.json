{
  "include": [
    "**/*.ts",
    "**/*.tsx",
    ".jzor/CLR.d.ts",
  ],
  "exclude": [
    // ignore asset files and folders
    "**/@*/**",
    "@*.*"
  ],
  "compilerOptions": {
    "target": "ES2020", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": [
      "ES2020",
      "DOM"
    ], /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "jsx": "react", /* Specify what JSX code is generated. */
    "experimentalDecorators": true, /* Enable experimental support for TC39 stage 2 draft decorators. */
    "emitDecoratorMetadata": true, /* Emit design-type metadata for decorated declarations in source files. */
    "jsxFactory": "jzor.createElement", /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'. */
    "jsxFragmentFactory": "jzor.Fragment", /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'. */
    "module": "None",
    "allowJs": false, /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    "declaration": false, /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "removeComments": true, /* Disable emitting comments. */
    "noEmit": true, /* Disable emitting files from a compilation. */
    //"outFile": "test.js",
    "sourceRoot": "/", /* Specify the root path for debuggers to find the reference source code. */
    "inlineSourceMap": true, /* Include sourcemap files inside the emitted JavaScript. */
    "inlineSources": true, /* Include source code in the sourcemaps inside the emitted JavaScript. */
    "noEmitOnError": false, /* Disable emitting files if any type checking errors are reported. */
    "strict": true, /* Enable all strict type-checking options. */
    "noImplicitAny": false, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "alwaysStrict": false, /* Ensure 'use strict' is always emitted. */
    "noImplicitOverride": false, /* Ensure overriding members in derived classes are marked with an override modifier. */
  },
}